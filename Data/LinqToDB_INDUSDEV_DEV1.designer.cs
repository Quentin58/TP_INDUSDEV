#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TP_INDUSDEV.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_INDUSDEV_DEV")]
	public partial class linqToDB_INDUSDEV_DEVDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertT_MATERIAL_TYPE(T_MATERIAL_TYPE instance);
    partial void UpdateT_MATERIAL_TYPE(T_MATERIAL_TYPE instance);
    partial void DeleteT_MATERIAL_TYPE(T_MATERIAL_TYPE instance);
    partial void InsertT_OPERATOR(T_OPERATOR instance);
    partial void UpdateT_OPERATOR(T_OPERATOR instance);
    partial void DeleteT_OPERATOR(T_OPERATOR instance);
    partial void InsertT_RIGHT(T_RIGHT instance);
    partial void UpdateT_RIGHT(T_RIGHT instance);
    partial void DeleteT_RIGHT(T_RIGHT instance);
    partial void InsertT_TICKET(T_TICKET instance);
    partial void UpdateT_TICKET(T_TICKET instance);
    partial void DeleteT_TICKET(T_TICKET instance);
    partial void InsertT_TICKET_STATE(T_TICKET_STATE instance);
    partial void UpdateT_TICKET_STATE(T_TICKET_STATE instance);
    partial void DeleteT_TICKET_STATE(T_TICKET_STATE instance);
    partial void InsertTJ_RIGHT_OPERATOR_TYPE(TJ_RIGHT_OPERATOR_TYPE instance);
    partial void UpdateTJ_RIGHT_OPERATOR_TYPE(TJ_RIGHT_OPERATOR_TYPE instance);
    partial void DeleteTJ_RIGHT_OPERATOR_TYPE(TJ_RIGHT_OPERATOR_TYPE instance);
    partial void InsertTJ_TICKET_MATERIAL_TYPE(TJ_TICKET_MATERIAL_TYPE instance);
    partial void UpdateTJ_TICKET_MATERIAL_TYPE(TJ_TICKET_MATERIAL_TYPE instance);
    partial void DeleteTJ_TICKET_MATERIAL_TYPE(TJ_TICKET_MATERIAL_TYPE instance);
    partial void InsertT_OPERATOR_TYPE(T_OPERATOR_TYPE instance);
    partial void UpdateT_OPERATOR_TYPE(T_OPERATOR_TYPE instance);
    partial void DeleteT_OPERATOR_TYPE(T_OPERATOR_TYPE instance);
    partial void InsertT_UPDATE_TICKET(T_UPDATE_TICKET instance);
    partial void UpdateT_UPDATE_TICKET(T_UPDATE_TICKET instance);
    partial void DeleteT_UPDATE_TICKET(T_UPDATE_TICKET instance);
    partial void InsertT_LEVEL_TICKET(T_LEVEL_TICKET instance);
    partial void UpdateT_LEVEL_TICKET(T_LEVEL_TICKET instance);
    partial void DeleteT_LEVEL_TICKET(T_LEVEL_TICKET instance);
    #endregion
		
		public linqToDB_INDUSDEV_DEVDataContext() : 
				base(global::TP_INDUSDEV.Properties.Settings.Default.DB_INDUSDEV_DEVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public linqToDB_INDUSDEV_DEVDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqToDB_INDUSDEV_DEVDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqToDB_INDUSDEV_DEVDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqToDB_INDUSDEV_DEVDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_MATERIAL_TYPE> T_MATERIAL_TYPE
		{
			get
			{
				return this.GetTable<T_MATERIAL_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<T_OPERATOR> T_OPERATOR
		{
			get
			{
				return this.GetTable<T_OPERATOR>();
			}
		}
		
		public System.Data.Linq.Table<T_RIGHT> T_RIGHT
		{
			get
			{
				return this.GetTable<T_RIGHT>();
			}
		}
		
		public System.Data.Linq.Table<T_TICKET> T_TICKET
		{
			get
			{
				return this.GetTable<T_TICKET>();
			}
		}
		
		public System.Data.Linq.Table<T_TICKET_STATE> T_TICKET_STATE
		{
			get
			{
				return this.GetTable<T_TICKET_STATE>();
			}
		}
		
		public System.Data.Linq.Table<TJ_RIGHT_OPERATOR_TYPE> TJ_RIGHT_OPERATOR_TYPE
		{
			get
			{
				return this.GetTable<TJ_RIGHT_OPERATOR_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<TJ_TICKET_MATERIAL_TYPE> TJ_TICKET_MATERIAL_TYPE
		{
			get
			{
				return this.GetTable<TJ_TICKET_MATERIAL_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<T_OPERATOR_TYPE> T_OPERATOR_TYPE
		{
			get
			{
				return this.GetTable<T_OPERATOR_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<T_UPDATE_TICKET> T_UPDATE_TICKET
		{
			get
			{
				return this.GetTable<T_UPDATE_TICKET>();
			}
		}
		
		public System.Data.Linq.Table<T_LEVEL_TICKET> T_LEVEL_TICKET
		{
			get
			{
				return this.GetTable<T_LEVEL_TICKET>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_MATERIAL_TYPE")]
	public partial class T_MATERIAL_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_MATERIAL_TYPE;
		
		private string _NAME_MATERIAL_TYPE;
		
		private EntityRef<TJ_TICKET_MATERIAL_TYPE> _TJ_TICKET_MATERIAL_TYPE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MATERIAL_TYPEChanging(int value);
    partial void OnID_MATERIAL_TYPEChanged();
    partial void OnNAME_MATERIAL_TYPEChanging(string value);
    partial void OnNAME_MATERIAL_TYPEChanged();
    #endregion
		
		public T_MATERIAL_TYPE()
		{
			this._TJ_TICKET_MATERIAL_TYPE = default(EntityRef<TJ_TICKET_MATERIAL_TYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MATERIAL_TYPE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_MATERIAL_TYPE
		{
			get
			{
				return this._ID_MATERIAL_TYPE;
			}
			set
			{
				if ((this._ID_MATERIAL_TYPE != value))
				{
					this.OnID_MATERIAL_TYPEChanging(value);
					this.SendPropertyChanging();
					this._ID_MATERIAL_TYPE = value;
					this.SendPropertyChanged("ID_MATERIAL_TYPE");
					this.OnID_MATERIAL_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[NAME_MATERIAL-TYPE]", Storage="_NAME_MATERIAL_TYPE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME_MATERIAL_TYPE
		{
			get
			{
				return this._NAME_MATERIAL_TYPE;
			}
			set
			{
				if ((this._NAME_MATERIAL_TYPE != value))
				{
					this.OnNAME_MATERIAL_TYPEChanging(value);
					this.SendPropertyChanging();
					this._NAME_MATERIAL_TYPE = value;
					this.SendPropertyChanged("NAME_MATERIAL_TYPE");
					this.OnNAME_MATERIAL_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_MATERIAL_TYPE_TJ_TICKET_MATERIAL_TYPE", Storage="_TJ_TICKET_MATERIAL_TYPE", ThisKey="ID_MATERIAL_TYPE", OtherKey="ID_TICKET_MATERIAL_TYPE", IsUnique=true, IsForeignKey=false)]
		public TJ_TICKET_MATERIAL_TYPE TJ_TICKET_MATERIAL_TYPE
		{
			get
			{
				return this._TJ_TICKET_MATERIAL_TYPE.Entity;
			}
			set
			{
				TJ_TICKET_MATERIAL_TYPE previousValue = this._TJ_TICKET_MATERIAL_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._TJ_TICKET_MATERIAL_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TJ_TICKET_MATERIAL_TYPE.Entity = null;
						previousValue.T_MATERIAL_TYPE = null;
					}
					this._TJ_TICKET_MATERIAL_TYPE.Entity = value;
					if ((value != null))
					{
						value.T_MATERIAL_TYPE = this;
					}
					this.SendPropertyChanged("TJ_TICKET_MATERIAL_TYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_OPERATOR")]
	public partial class T_OPERATOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_OPERATOR;
		
		private string _LAST_NAME_OPERATOR;
		
		private string _FIRST_NAME_OPERATOR;
		
		private string _LOGIN_OPERATOR;
		
		private string _PASSWORD_OPERATOR;
		
		private int _ID_OPERATOR_TYPE;
		
		private EntitySet<T_TICKET> _T_TICKET;
		
		private EntitySet<T_TICKET> _T_TICKET1;
		
		private EntitySet<T_TICKET> _T_TICKET2;
		
		private EntitySet<T_UPDATE_TICKET> _T_UPDATE_TICKET;
		
		private EntitySet<T_UPDATE_TICKET> _T_UPDATE_TICKET1;
		
		private EntityRef<T_OPERATOR_TYPE> _T_OPERATOR_TYPE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_OPERATORChanging(int value);
    partial void OnID_OPERATORChanged();
    partial void OnLAST_NAME_OPERATORChanging(string value);
    partial void OnLAST_NAME_OPERATORChanged();
    partial void OnFIRST_NAME_OPERATORChanging(string value);
    partial void OnFIRST_NAME_OPERATORChanged();
    partial void OnLOGIN_OPERATORChanging(string value);
    partial void OnLOGIN_OPERATORChanged();
    partial void OnPASSWORD_OPERATORChanging(string value);
    partial void OnPASSWORD_OPERATORChanged();
    partial void OnID_OPERATOR_TYPEChanging(int value);
    partial void OnID_OPERATOR_TYPEChanged();
    #endregion
		
		public T_OPERATOR()
		{
			this._T_TICKET = new EntitySet<T_TICKET>(new Action<T_TICKET>(this.attach_T_TICKET), new Action<T_TICKET>(this.detach_T_TICKET));
			this._T_TICKET1 = new EntitySet<T_TICKET>(new Action<T_TICKET>(this.attach_T_TICKET1), new Action<T_TICKET>(this.detach_T_TICKET1));
			this._T_TICKET2 = new EntitySet<T_TICKET>(new Action<T_TICKET>(this.attach_T_TICKET2), new Action<T_TICKET>(this.detach_T_TICKET2));
			this._T_UPDATE_TICKET = new EntitySet<T_UPDATE_TICKET>(new Action<T_UPDATE_TICKET>(this.attach_T_UPDATE_TICKET), new Action<T_UPDATE_TICKET>(this.detach_T_UPDATE_TICKET));
			this._T_UPDATE_TICKET1 = new EntitySet<T_UPDATE_TICKET>(new Action<T_UPDATE_TICKET>(this.attach_T_UPDATE_TICKET1), new Action<T_UPDATE_TICKET>(this.detach_T_UPDATE_TICKET1));
			this._T_OPERATOR_TYPE = default(EntityRef<T_OPERATOR_TYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_OPERATOR", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_OPERATOR
		{
			get
			{
				return this._ID_OPERATOR;
			}
			set
			{
				if ((this._ID_OPERATOR != value))
				{
					this.OnID_OPERATORChanging(value);
					this.SendPropertyChanging();
					this._ID_OPERATOR = value;
					this.SendPropertyChanged("ID_OPERATOR");
					this.OnID_OPERATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_NAME_OPERATOR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LAST_NAME_OPERATOR
		{
			get
			{
				return this._LAST_NAME_OPERATOR;
			}
			set
			{
				if ((this._LAST_NAME_OPERATOR != value))
				{
					this.OnLAST_NAME_OPERATORChanging(value);
					this.SendPropertyChanging();
					this._LAST_NAME_OPERATOR = value;
					this.SendPropertyChanged("LAST_NAME_OPERATOR");
					this.OnLAST_NAME_OPERATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIRST_NAME_OPERATOR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FIRST_NAME_OPERATOR
		{
			get
			{
				return this._FIRST_NAME_OPERATOR;
			}
			set
			{
				if ((this._FIRST_NAME_OPERATOR != value))
				{
					this.OnFIRST_NAME_OPERATORChanging(value);
					this.SendPropertyChanging();
					this._FIRST_NAME_OPERATOR = value;
					this.SendPropertyChanged("FIRST_NAME_OPERATOR");
					this.OnFIRST_NAME_OPERATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOGIN_OPERATOR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LOGIN_OPERATOR
		{
			get
			{
				return this._LOGIN_OPERATOR;
			}
			set
			{
				if ((this._LOGIN_OPERATOR != value))
				{
					this.OnLOGIN_OPERATORChanging(value);
					this.SendPropertyChanging();
					this._LOGIN_OPERATOR = value;
					this.SendPropertyChanged("LOGIN_OPERATOR");
					this.OnLOGIN_OPERATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD_OPERATOR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PASSWORD_OPERATOR
		{
			get
			{
				return this._PASSWORD_OPERATOR;
			}
			set
			{
				if ((this._PASSWORD_OPERATOR != value))
				{
					this.OnPASSWORD_OPERATORChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD_OPERATOR = value;
					this.SendPropertyChanged("PASSWORD_OPERATOR");
					this.OnPASSWORD_OPERATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_OPERATOR_TYPE", DbType="Int NOT NULL")]
		public int ID_OPERATOR_TYPE
		{
			get
			{
				return this._ID_OPERATOR_TYPE;
			}
			set
			{
				if ((this._ID_OPERATOR_TYPE != value))
				{
					if (this._T_OPERATOR_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_OPERATOR_TYPEChanging(value);
					this.SendPropertyChanging();
					this._ID_OPERATOR_TYPE = value;
					this.SendPropertyChanged("ID_OPERATOR_TYPE");
					this.OnID_OPERATOR_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_T_TICKET", Storage="_T_TICKET", ThisKey="ID_OPERATOR", OtherKey="ID_OWNER_OPERATOR")]
		public EntitySet<T_TICKET> T_TICKET
		{
			get
			{
				return this._T_TICKET;
			}
			set
			{
				this._T_TICKET.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_T_TICKET1", Storage="_T_TICKET1", ThisKey="ID_OPERATOR", OtherKey="ID_SELECTED_OPERATOR")]
		public EntitySet<T_TICKET> T_TICKET1
		{
			get
			{
				return this._T_TICKET1;
			}
			set
			{
				this._T_TICKET1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_T_TICKET2", Storage="_T_TICKET2", ThisKey="ID_OPERATOR", OtherKey="ID_SOLVER_OPERATOR")]
		public EntitySet<T_TICKET> T_TICKET2
		{
			get
			{
				return this._T_TICKET2;
			}
			set
			{
				this._T_TICKET2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_T_UPDATE_TICKET", Storage="_T_UPDATE_TICKET", ThisKey="ID_OPERATOR", OtherKey="ID_DELEGATED_OPERATOR")]
		public EntitySet<T_UPDATE_TICKET> T_UPDATE_TICKET
		{
			get
			{
				return this._T_UPDATE_TICKET;
			}
			set
			{
				this._T_UPDATE_TICKET.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_T_UPDATE_TICKET1", Storage="_T_UPDATE_TICKET1", ThisKey="ID_OPERATOR", OtherKey="ID_MODIFIER_OPERATOR")]
		public EntitySet<T_UPDATE_TICKET> T_UPDATE_TICKET1
		{
			get
			{
				return this._T_UPDATE_TICKET1;
			}
			set
			{
				this._T_UPDATE_TICKET1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_TYPE_T_OPERATOR", Storage="_T_OPERATOR_TYPE", ThisKey="ID_OPERATOR_TYPE", OtherKey="ID_OPERATOR_TYPE", IsForeignKey=true)]
		public T_OPERATOR_TYPE T_OPERATOR_TYPE
		{
			get
			{
				return this._T_OPERATOR_TYPE.Entity;
			}
			set
			{
				T_OPERATOR_TYPE previousValue = this._T_OPERATOR_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._T_OPERATOR_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OPERATOR_TYPE.Entity = null;
						previousValue.T_OPERATOR.Remove(this);
					}
					this._T_OPERATOR_TYPE.Entity = value;
					if ((value != null))
					{
						value.T_OPERATOR.Add(this);
						this._ID_OPERATOR_TYPE = value.ID_OPERATOR_TYPE;
					}
					else
					{
						this._ID_OPERATOR_TYPE = default(int);
					}
					this.SendPropertyChanged("T_OPERATOR_TYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_TICKET(T_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_OPERATOR = this;
		}
		
		private void detach_T_TICKET(T_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_OPERATOR = null;
		}
		
		private void attach_T_TICKET1(T_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_OPERATOR1 = this;
		}
		
		private void detach_T_TICKET1(T_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_OPERATOR1 = null;
		}
		
		private void attach_T_TICKET2(T_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_OPERATOR2 = this;
		}
		
		private void detach_T_TICKET2(T_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_OPERATOR2 = null;
		}
		
		private void attach_T_UPDATE_TICKET(T_UPDATE_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_OPERATOR = this;
		}
		
		private void detach_T_UPDATE_TICKET(T_UPDATE_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_OPERATOR = null;
		}
		
		private void attach_T_UPDATE_TICKET1(T_UPDATE_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_OPERATOR1 = this;
		}
		
		private void detach_T_UPDATE_TICKET1(T_UPDATE_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_OPERATOR1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_RIGHT")]
	public partial class T_RIGHT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_RIGHT;
		
		private string _NAME_RIGHT;
		
		private EntityRef<TJ_RIGHT_OPERATOR_TYPE> _TJ_RIGHT_OPERATOR_TYPE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RIGHTChanging(int value);
    partial void OnID_RIGHTChanged();
    partial void OnNAME_RIGHTChanging(string value);
    partial void OnNAME_RIGHTChanged();
    #endregion
		
		public T_RIGHT()
		{
			this._TJ_RIGHT_OPERATOR_TYPE = default(EntityRef<TJ_RIGHT_OPERATOR_TYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_RIGHT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_RIGHT
		{
			get
			{
				return this._ID_RIGHT;
			}
			set
			{
				if ((this._ID_RIGHT != value))
				{
					this.OnID_RIGHTChanging(value);
					this.SendPropertyChanging();
					this._ID_RIGHT = value;
					this.SendPropertyChanged("ID_RIGHT");
					this.OnID_RIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_RIGHT", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string NAME_RIGHT
		{
			get
			{
				return this._NAME_RIGHT;
			}
			set
			{
				if ((this._NAME_RIGHT != value))
				{
					this.OnNAME_RIGHTChanging(value);
					this.SendPropertyChanging();
					this._NAME_RIGHT = value;
					this.SendPropertyChanged("NAME_RIGHT");
					this.OnNAME_RIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_RIGHT_TJ_RIGHT_OPERATOR_TYPE", Storage="_TJ_RIGHT_OPERATOR_TYPE", ThisKey="ID_RIGHT", OtherKey="ID_RIGHT_OPERATOR_TYPE", IsUnique=true, IsForeignKey=false)]
		public TJ_RIGHT_OPERATOR_TYPE TJ_RIGHT_OPERATOR_TYPE
		{
			get
			{
				return this._TJ_RIGHT_OPERATOR_TYPE.Entity;
			}
			set
			{
				TJ_RIGHT_OPERATOR_TYPE previousValue = this._TJ_RIGHT_OPERATOR_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._TJ_RIGHT_OPERATOR_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TJ_RIGHT_OPERATOR_TYPE.Entity = null;
						previousValue.T_RIGHT = null;
					}
					this._TJ_RIGHT_OPERATOR_TYPE.Entity = value;
					if ((value != null))
					{
						value.T_RIGHT = this;
					}
					this.SendPropertyChanged("TJ_RIGHT_OPERATOR_TYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TICKET")]
	public partial class T_TICKET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TICKET;
		
		private System.DateTime _START_DATE_TICKET;
		
		private System.Nullable<System.DateTime> _END_DATE_TICKET;
		
		private string _DETAILS_TICKET;
		
		private string _INTERVENTION_DESCRIPTION_TICKET;
		
		private int _ID_TICKET_STATE;
		
		private int _ID_OWNER_OPERATOR;
		
		private int _ID_SELECTED_OPERATOR;
		
		private int _ID_SOLVER_OPERATOR;
		
		private EntitySet<TJ_TICKET_MATERIAL_TYPE> _TJ_TICKET_MATERIAL_TYPE;
		
		private EntitySet<T_UPDATE_TICKET> _T_UPDATE_TICKET;
		
		private EntityRef<T_OPERATOR> _T_OPERATOR;
		
		private EntityRef<T_OPERATOR> _T_OPERATOR1;
		
		private EntityRef<T_OPERATOR> _T_OPERATOR2;
		
		private EntityRef<T_TICKET_STATE> _T_TICKET_STATE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TICKETChanging(int value);
    partial void OnID_TICKETChanged();
    partial void OnSTART_DATE_TICKETChanging(System.DateTime value);
    partial void OnSTART_DATE_TICKETChanged();
    partial void OnEND_DATE_TICKETChanging(System.Nullable<System.DateTime> value);
    partial void OnEND_DATE_TICKETChanged();
    partial void OnDETAILS_TICKETChanging(string value);
    partial void OnDETAILS_TICKETChanged();
    partial void OnINTERVENTION_DESCRIPTION_TICKETChanging(string value);
    partial void OnINTERVENTION_DESCRIPTION_TICKETChanged();
    partial void OnID_TICKET_STATEChanging(int value);
    partial void OnID_TICKET_STATEChanged();
    partial void OnID_OWNER_OPERATORChanging(int value);
    partial void OnID_OWNER_OPERATORChanged();
    partial void OnID_SELECTED_OPERATORChanging(int value);
    partial void OnID_SELECTED_OPERATORChanged();
    partial void OnID_SOLVER_OPERATORChanging(int value);
    partial void OnID_SOLVER_OPERATORChanged();
    #endregion
		
		public T_TICKET()
		{
			this._TJ_TICKET_MATERIAL_TYPE = new EntitySet<TJ_TICKET_MATERIAL_TYPE>(new Action<TJ_TICKET_MATERIAL_TYPE>(this.attach_TJ_TICKET_MATERIAL_TYPE), new Action<TJ_TICKET_MATERIAL_TYPE>(this.detach_TJ_TICKET_MATERIAL_TYPE));
			this._T_UPDATE_TICKET = new EntitySet<T_UPDATE_TICKET>(new Action<T_UPDATE_TICKET>(this.attach_T_UPDATE_TICKET), new Action<T_UPDATE_TICKET>(this.detach_T_UPDATE_TICKET));
			this._T_OPERATOR = default(EntityRef<T_OPERATOR>);
			this._T_OPERATOR1 = default(EntityRef<T_OPERATOR>);
			this._T_OPERATOR2 = default(EntityRef<T_OPERATOR>);
			this._T_TICKET_STATE = default(EntityRef<T_TICKET_STATE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TICKET", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TICKET
		{
			get
			{
				return this._ID_TICKET;
			}
			set
			{
				if ((this._ID_TICKET != value))
				{
					this.OnID_TICKETChanging(value);
					this.SendPropertyChanging();
					this._ID_TICKET = value;
					this.SendPropertyChanged("ID_TICKET");
					this.OnID_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_START_DATE_TICKET", DbType="DateTime NOT NULL")]
		public System.DateTime START_DATE_TICKET
		{
			get
			{
				return this._START_DATE_TICKET;
			}
			set
			{
				if ((this._START_DATE_TICKET != value))
				{
					this.OnSTART_DATE_TICKETChanging(value);
					this.SendPropertyChanging();
					this._START_DATE_TICKET = value;
					this.SendPropertyChanged("START_DATE_TICKET");
					this.OnSTART_DATE_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_END_DATE_TICKET", DbType="DateTime")]
		public System.Nullable<System.DateTime> END_DATE_TICKET
		{
			get
			{
				return this._END_DATE_TICKET;
			}
			set
			{
				if ((this._END_DATE_TICKET != value))
				{
					this.OnEND_DATE_TICKETChanging(value);
					this.SendPropertyChanging();
					this._END_DATE_TICKET = value;
					this.SendPropertyChanged("END_DATE_TICKET");
					this.OnEND_DATE_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DETAILS_TICKET", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string DETAILS_TICKET
		{
			get
			{
				return this._DETAILS_TICKET;
			}
			set
			{
				if ((this._DETAILS_TICKET != value))
				{
					this.OnDETAILS_TICKETChanging(value);
					this.SendPropertyChanging();
					this._DETAILS_TICKET = value;
					this.SendPropertyChanged("DETAILS_TICKET");
					this.OnDETAILS_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTERVENTION_DESCRIPTION_TICKET", DbType="VarChar(255)")]
		public string INTERVENTION_DESCRIPTION_TICKET
		{
			get
			{
				return this._INTERVENTION_DESCRIPTION_TICKET;
			}
			set
			{
				if ((this._INTERVENTION_DESCRIPTION_TICKET != value))
				{
					this.OnINTERVENTION_DESCRIPTION_TICKETChanging(value);
					this.SendPropertyChanging();
					this._INTERVENTION_DESCRIPTION_TICKET = value;
					this.SendPropertyChanged("INTERVENTION_DESCRIPTION_TICKET");
					this.OnINTERVENTION_DESCRIPTION_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TICKET_STATE", DbType="Int NOT NULL")]
		public int ID_TICKET_STATE
		{
			get
			{
				return this._ID_TICKET_STATE;
			}
			set
			{
				if ((this._ID_TICKET_STATE != value))
				{
					if (this._T_TICKET_STATE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TICKET_STATEChanging(value);
					this.SendPropertyChanging();
					this._ID_TICKET_STATE = value;
					this.SendPropertyChanged("ID_TICKET_STATE");
					this.OnID_TICKET_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_OWNER_OPERATOR", DbType="Int NOT NULL")]
		public int ID_OWNER_OPERATOR
		{
			get
			{
				return this._ID_OWNER_OPERATOR;
			}
			set
			{
				if ((this._ID_OWNER_OPERATOR != value))
				{
					if (this._T_OPERATOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_OWNER_OPERATORChanging(value);
					this.SendPropertyChanging();
					this._ID_OWNER_OPERATOR = value;
					this.SendPropertyChanged("ID_OWNER_OPERATOR");
					this.OnID_OWNER_OPERATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SELECTED_OPERATOR", DbType="Int NOT NULL")]
		public int ID_SELECTED_OPERATOR
		{
			get
			{
				return this._ID_SELECTED_OPERATOR;
			}
			set
			{
				if ((this._ID_SELECTED_OPERATOR != value))
				{
					if (this._T_OPERATOR1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SELECTED_OPERATORChanging(value);
					this.SendPropertyChanging();
					this._ID_SELECTED_OPERATOR = value;
					this.SendPropertyChanged("ID_SELECTED_OPERATOR");
					this.OnID_SELECTED_OPERATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SOLVER_OPERATOR", DbType="Int NOT NULL")]
		public int ID_SOLVER_OPERATOR
		{
			get
			{
				return this._ID_SOLVER_OPERATOR;
			}
			set
			{
				if ((this._ID_SOLVER_OPERATOR != value))
				{
					if (this._T_OPERATOR2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SOLVER_OPERATORChanging(value);
					this.SendPropertyChanging();
					this._ID_SOLVER_OPERATOR = value;
					this.SendPropertyChanged("ID_SOLVER_OPERATOR");
					this.OnID_SOLVER_OPERATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TICKET_TJ_TICKET_MATERIAL_TYPE", Storage="_TJ_TICKET_MATERIAL_TYPE", ThisKey="ID_TICKET", OtherKey="ID_TICKET")]
		public EntitySet<TJ_TICKET_MATERIAL_TYPE> TJ_TICKET_MATERIAL_TYPE
		{
			get
			{
				return this._TJ_TICKET_MATERIAL_TYPE;
			}
			set
			{
				this._TJ_TICKET_MATERIAL_TYPE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TICKET_T_UPDATE_TICKET", Storage="_T_UPDATE_TICKET", ThisKey="ID_TICKET", OtherKey="ID_TICKET")]
		public EntitySet<T_UPDATE_TICKET> T_UPDATE_TICKET
		{
			get
			{
				return this._T_UPDATE_TICKET;
			}
			set
			{
				this._T_UPDATE_TICKET.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_T_TICKET", Storage="_T_OPERATOR", ThisKey="ID_OWNER_OPERATOR", OtherKey="ID_OPERATOR", IsForeignKey=true)]
		public T_OPERATOR T_OPERATOR
		{
			get
			{
				return this._T_OPERATOR.Entity;
			}
			set
			{
				T_OPERATOR previousValue = this._T_OPERATOR.Entity;
				if (((previousValue != value) 
							|| (this._T_OPERATOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OPERATOR.Entity = null;
						previousValue.T_TICKET.Remove(this);
					}
					this._T_OPERATOR.Entity = value;
					if ((value != null))
					{
						value.T_TICKET.Add(this);
						this._ID_OWNER_OPERATOR = value.ID_OPERATOR;
					}
					else
					{
						this._ID_OWNER_OPERATOR = default(int);
					}
					this.SendPropertyChanged("T_OPERATOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_T_TICKET1", Storage="_T_OPERATOR1", ThisKey="ID_SELECTED_OPERATOR", OtherKey="ID_OPERATOR", IsForeignKey=true)]
		public T_OPERATOR T_OPERATOR1
		{
			get
			{
				return this._T_OPERATOR1.Entity;
			}
			set
			{
				T_OPERATOR previousValue = this._T_OPERATOR1.Entity;
				if (((previousValue != value) 
							|| (this._T_OPERATOR1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OPERATOR1.Entity = null;
						previousValue.T_TICKET1.Remove(this);
					}
					this._T_OPERATOR1.Entity = value;
					if ((value != null))
					{
						value.T_TICKET1.Add(this);
						this._ID_SELECTED_OPERATOR = value.ID_OPERATOR;
					}
					else
					{
						this._ID_SELECTED_OPERATOR = default(int);
					}
					this.SendPropertyChanged("T_OPERATOR1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_T_TICKET2", Storage="_T_OPERATOR2", ThisKey="ID_SOLVER_OPERATOR", OtherKey="ID_OPERATOR", IsForeignKey=true)]
		public T_OPERATOR T_OPERATOR2
		{
			get
			{
				return this._T_OPERATOR2.Entity;
			}
			set
			{
				T_OPERATOR previousValue = this._T_OPERATOR2.Entity;
				if (((previousValue != value) 
							|| (this._T_OPERATOR2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OPERATOR2.Entity = null;
						previousValue.T_TICKET2.Remove(this);
					}
					this._T_OPERATOR2.Entity = value;
					if ((value != null))
					{
						value.T_TICKET2.Add(this);
						this._ID_SOLVER_OPERATOR = value.ID_OPERATOR;
					}
					else
					{
						this._ID_SOLVER_OPERATOR = default(int);
					}
					this.SendPropertyChanged("T_OPERATOR2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TICKET_STATE_T_TICKET", Storage="_T_TICKET_STATE", ThisKey="ID_TICKET_STATE", OtherKey="ID_TICKET_STATE", IsForeignKey=true)]
		public T_TICKET_STATE T_TICKET_STATE
		{
			get
			{
				return this._T_TICKET_STATE.Entity;
			}
			set
			{
				T_TICKET_STATE previousValue = this._T_TICKET_STATE.Entity;
				if (((previousValue != value) 
							|| (this._T_TICKET_STATE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_TICKET_STATE.Entity = null;
						previousValue.T_TICKET.Remove(this);
					}
					this._T_TICKET_STATE.Entity = value;
					if ((value != null))
					{
						value.T_TICKET.Add(this);
						this._ID_TICKET_STATE = value.ID_TICKET_STATE;
					}
					else
					{
						this._ID_TICKET_STATE = default(int);
					}
					this.SendPropertyChanged("T_TICKET_STATE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TJ_TICKET_MATERIAL_TYPE(TJ_TICKET_MATERIAL_TYPE entity)
		{
			this.SendPropertyChanging();
			entity.T_TICKET = this;
		}
		
		private void detach_TJ_TICKET_MATERIAL_TYPE(TJ_TICKET_MATERIAL_TYPE entity)
		{
			this.SendPropertyChanging();
			entity.T_TICKET = null;
		}
		
		private void attach_T_UPDATE_TICKET(T_UPDATE_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_TICKET = this;
		}
		
		private void detach_T_UPDATE_TICKET(T_UPDATE_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_TICKET = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TICKET_STATE")]
	public partial class T_TICKET_STATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TICKET_STATE;
		
		private string _NAME_TICKET_STATE;
		
		private EntitySet<T_TICKET> _T_TICKET;
		
		private EntitySet<T_UPDATE_TICKET> _T_UPDATE_TICKET;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TICKET_STATEChanging(int value);
    partial void OnID_TICKET_STATEChanged();
    partial void OnNAME_TICKET_STATEChanging(string value);
    partial void OnNAME_TICKET_STATEChanged();
    #endregion
		
		public T_TICKET_STATE()
		{
			this._T_TICKET = new EntitySet<T_TICKET>(new Action<T_TICKET>(this.attach_T_TICKET), new Action<T_TICKET>(this.detach_T_TICKET));
			this._T_UPDATE_TICKET = new EntitySet<T_UPDATE_TICKET>(new Action<T_UPDATE_TICKET>(this.attach_T_UPDATE_TICKET), new Action<T_UPDATE_TICKET>(this.detach_T_UPDATE_TICKET));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TICKET_STATE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TICKET_STATE
		{
			get
			{
				return this._ID_TICKET_STATE;
			}
			set
			{
				if ((this._ID_TICKET_STATE != value))
				{
					this.OnID_TICKET_STATEChanging(value);
					this.SendPropertyChanging();
					this._ID_TICKET_STATE = value;
					this.SendPropertyChanged("ID_TICKET_STATE");
					this.OnID_TICKET_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_TICKET_STATE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NAME_TICKET_STATE
		{
			get
			{
				return this._NAME_TICKET_STATE;
			}
			set
			{
				if ((this._NAME_TICKET_STATE != value))
				{
					this.OnNAME_TICKET_STATEChanging(value);
					this.SendPropertyChanging();
					this._NAME_TICKET_STATE = value;
					this.SendPropertyChanged("NAME_TICKET_STATE");
					this.OnNAME_TICKET_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TICKET_STATE_T_TICKET", Storage="_T_TICKET", ThisKey="ID_TICKET_STATE", OtherKey="ID_TICKET_STATE")]
		public EntitySet<T_TICKET> T_TICKET
		{
			get
			{
				return this._T_TICKET;
			}
			set
			{
				this._T_TICKET.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TICKET_STATE_T_UPDATE_TICKET", Storage="_T_UPDATE_TICKET", ThisKey="ID_TICKET_STATE", OtherKey="ID_TICKET_STATE")]
		public EntitySet<T_UPDATE_TICKET> T_UPDATE_TICKET
		{
			get
			{
				return this._T_UPDATE_TICKET;
			}
			set
			{
				this._T_UPDATE_TICKET.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_TICKET(T_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_TICKET_STATE = this;
		}
		
		private void detach_T_TICKET(T_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_TICKET_STATE = null;
		}
		
		private void attach_T_UPDATE_TICKET(T_UPDATE_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_TICKET_STATE = this;
		}
		
		private void detach_T_UPDATE_TICKET(T_UPDATE_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_TICKET_STATE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TJ_RIGHT_OPERATOR_TYPE")]
	public partial class TJ_RIGHT_OPERATOR_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_RIGHT_OPERATOR_TYPE;
		
		private bool _ALLOWED;
		
		private int _ID_RIGHT;
		
		private int _ID_OPERATOR_TYPE;
		
		private EntityRef<T_RIGHT> _T_RIGHT;
		
		private EntityRef<T_OPERATOR_TYPE> _T_OPERATOR_TYPE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RIGHT_OPERATOR_TYPEChanging(int value);
    partial void OnID_RIGHT_OPERATOR_TYPEChanged();
    partial void OnALLOWEDChanging(bool value);
    partial void OnALLOWEDChanged();
    partial void OnID_RIGHTChanging(int value);
    partial void OnID_RIGHTChanged();
    partial void OnID_OPERATOR_TYPEChanging(int value);
    partial void OnID_OPERATOR_TYPEChanged();
    #endregion
		
		public TJ_RIGHT_OPERATOR_TYPE()
		{
			this._T_RIGHT = default(EntityRef<T_RIGHT>);
			this._T_OPERATOR_TYPE = default(EntityRef<T_OPERATOR_TYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_RIGHT_OPERATOR_TYPE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_RIGHT_OPERATOR_TYPE
		{
			get
			{
				return this._ID_RIGHT_OPERATOR_TYPE;
			}
			set
			{
				if ((this._ID_RIGHT_OPERATOR_TYPE != value))
				{
					if ((this._T_RIGHT.HasLoadedOrAssignedValue || this._T_OPERATOR_TYPE.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RIGHT_OPERATOR_TYPEChanging(value);
					this.SendPropertyChanging();
					this._ID_RIGHT_OPERATOR_TYPE = value;
					this.SendPropertyChanged("ID_RIGHT_OPERATOR_TYPE");
					this.OnID_RIGHT_OPERATOR_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLOWED", DbType="Bit NOT NULL")]
		public bool ALLOWED
		{
			get
			{
				return this._ALLOWED;
			}
			set
			{
				if ((this._ALLOWED != value))
				{
					this.OnALLOWEDChanging(value);
					this.SendPropertyChanging();
					this._ALLOWED = value;
					this.SendPropertyChanged("ALLOWED");
					this.OnALLOWEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_RIGHT", DbType="Int NOT NULL")]
		public int ID_RIGHT
		{
			get
			{
				return this._ID_RIGHT;
			}
			set
			{
				if ((this._ID_RIGHT != value))
				{
					this.OnID_RIGHTChanging(value);
					this.SendPropertyChanging();
					this._ID_RIGHT = value;
					this.SendPropertyChanged("ID_RIGHT");
					this.OnID_RIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_OPERATOR_TYPE", DbType="Int NOT NULL")]
		public int ID_OPERATOR_TYPE
		{
			get
			{
				return this._ID_OPERATOR_TYPE;
			}
			set
			{
				if ((this._ID_OPERATOR_TYPE != value))
				{
					this.OnID_OPERATOR_TYPEChanging(value);
					this.SendPropertyChanging();
					this._ID_OPERATOR_TYPE = value;
					this.SendPropertyChanged("ID_OPERATOR_TYPE");
					this.OnID_OPERATOR_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_RIGHT_TJ_RIGHT_OPERATOR_TYPE", Storage="_T_RIGHT", ThisKey="ID_RIGHT_OPERATOR_TYPE", OtherKey="ID_RIGHT", IsForeignKey=true)]
		public T_RIGHT T_RIGHT
		{
			get
			{
				return this._T_RIGHT.Entity;
			}
			set
			{
				T_RIGHT previousValue = this._T_RIGHT.Entity;
				if (((previousValue != value) 
							|| (this._T_RIGHT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_RIGHT.Entity = null;
						previousValue.TJ_RIGHT_OPERATOR_TYPE = null;
					}
					this._T_RIGHT.Entity = value;
					if ((value != null))
					{
						value.TJ_RIGHT_OPERATOR_TYPE = this;
						this._ID_RIGHT_OPERATOR_TYPE = value.ID_RIGHT;
					}
					else
					{
						this._ID_RIGHT_OPERATOR_TYPE = default(int);
					}
					this.SendPropertyChanged("T_RIGHT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_TYPE_TJ_RIGHT_OPERATOR_TYPE", Storage="_T_OPERATOR_TYPE", ThisKey="ID_RIGHT_OPERATOR_TYPE", OtherKey="ID_OPERATOR_TYPE", IsForeignKey=true)]
		public T_OPERATOR_TYPE T_OPERATOR_TYPE
		{
			get
			{
				return this._T_OPERATOR_TYPE.Entity;
			}
			set
			{
				T_OPERATOR_TYPE previousValue = this._T_OPERATOR_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._T_OPERATOR_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OPERATOR_TYPE.Entity = null;
						previousValue.TJ_RIGHT_OPERATOR_TYPE = null;
					}
					this._T_OPERATOR_TYPE.Entity = value;
					if ((value != null))
					{
						value.TJ_RIGHT_OPERATOR_TYPE = this;
						this._ID_RIGHT_OPERATOR_TYPE = value.ID_OPERATOR_TYPE;
					}
					else
					{
						this._ID_RIGHT_OPERATOR_TYPE = default(int);
					}
					this.SendPropertyChanged("T_OPERATOR_TYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TJ_TICKET_MATERIAL_TYPE")]
	public partial class TJ_TICKET_MATERIAL_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TICKET_MATERIAL_TYPE;
		
		private int _ID_TICKET;
		
		private int _ID_MATERIAL_TYPE;
		
		private EntityRef<T_MATERIAL_TYPE> _T_MATERIAL_TYPE;
		
		private EntityRef<T_TICKET> _T_TICKET;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TICKET_MATERIAL_TYPEChanging(int value);
    partial void OnID_TICKET_MATERIAL_TYPEChanged();
    partial void OnID_TICKETChanging(int value);
    partial void OnID_TICKETChanged();
    partial void OnID_MATERIAL_TYPEChanging(int value);
    partial void OnID_MATERIAL_TYPEChanged();
    #endregion
		
		public TJ_TICKET_MATERIAL_TYPE()
		{
			this._T_MATERIAL_TYPE = default(EntityRef<T_MATERIAL_TYPE>);
			this._T_TICKET = default(EntityRef<T_TICKET>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TICKET_MATERIAL_TYPE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TICKET_MATERIAL_TYPE
		{
			get
			{
				return this._ID_TICKET_MATERIAL_TYPE;
			}
			set
			{
				if ((this._ID_TICKET_MATERIAL_TYPE != value))
				{
					if (this._T_MATERIAL_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TICKET_MATERIAL_TYPEChanging(value);
					this.SendPropertyChanging();
					this._ID_TICKET_MATERIAL_TYPE = value;
					this.SendPropertyChanged("ID_TICKET_MATERIAL_TYPE");
					this.OnID_TICKET_MATERIAL_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TICKET", DbType="Int NOT NULL")]
		public int ID_TICKET
		{
			get
			{
				return this._ID_TICKET;
			}
			set
			{
				if ((this._ID_TICKET != value))
				{
					if (this._T_TICKET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TICKETChanging(value);
					this.SendPropertyChanging();
					this._ID_TICKET = value;
					this.SendPropertyChanged("ID_TICKET");
					this.OnID_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MATERIAL_TYPE", DbType="Int NOT NULL")]
		public int ID_MATERIAL_TYPE
		{
			get
			{
				return this._ID_MATERIAL_TYPE;
			}
			set
			{
				if ((this._ID_MATERIAL_TYPE != value))
				{
					this.OnID_MATERIAL_TYPEChanging(value);
					this.SendPropertyChanging();
					this._ID_MATERIAL_TYPE = value;
					this.SendPropertyChanged("ID_MATERIAL_TYPE");
					this.OnID_MATERIAL_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_MATERIAL_TYPE_TJ_TICKET_MATERIAL_TYPE", Storage="_T_MATERIAL_TYPE", ThisKey="ID_TICKET_MATERIAL_TYPE", OtherKey="ID_MATERIAL_TYPE", IsForeignKey=true)]
		public T_MATERIAL_TYPE T_MATERIAL_TYPE
		{
			get
			{
				return this._T_MATERIAL_TYPE.Entity;
			}
			set
			{
				T_MATERIAL_TYPE previousValue = this._T_MATERIAL_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._T_MATERIAL_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_MATERIAL_TYPE.Entity = null;
						previousValue.TJ_TICKET_MATERIAL_TYPE = null;
					}
					this._T_MATERIAL_TYPE.Entity = value;
					if ((value != null))
					{
						value.TJ_TICKET_MATERIAL_TYPE = this;
						this._ID_TICKET_MATERIAL_TYPE = value.ID_MATERIAL_TYPE;
					}
					else
					{
						this._ID_TICKET_MATERIAL_TYPE = default(int);
					}
					this.SendPropertyChanged("T_MATERIAL_TYPE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TICKET_TJ_TICKET_MATERIAL_TYPE", Storage="_T_TICKET", ThisKey="ID_TICKET", OtherKey="ID_TICKET", IsForeignKey=true)]
		public T_TICKET T_TICKET
		{
			get
			{
				return this._T_TICKET.Entity;
			}
			set
			{
				T_TICKET previousValue = this._T_TICKET.Entity;
				if (((previousValue != value) 
							|| (this._T_TICKET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_TICKET.Entity = null;
						previousValue.TJ_TICKET_MATERIAL_TYPE.Remove(this);
					}
					this._T_TICKET.Entity = value;
					if ((value != null))
					{
						value.TJ_TICKET_MATERIAL_TYPE.Add(this);
						this._ID_TICKET = value.ID_TICKET;
					}
					else
					{
						this._ID_TICKET = default(int);
					}
					this.SendPropertyChanged("T_TICKET");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_OPERATOR_TYPE")]
	public partial class T_OPERATOR_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_OPERATOR_TYPE;
		
		private string _NAME_OPERATOR_TYPE;
		
		private EntitySet<T_OPERATOR> _T_OPERATOR;
		
		private EntityRef<TJ_RIGHT_OPERATOR_TYPE> _TJ_RIGHT_OPERATOR_TYPE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_OPERATOR_TYPEChanging(int value);
    partial void OnID_OPERATOR_TYPEChanged();
    partial void OnNAME_OPERATOR_TYPEChanging(string value);
    partial void OnNAME_OPERATOR_TYPEChanged();
    #endregion
		
		public T_OPERATOR_TYPE()
		{
			this._T_OPERATOR = new EntitySet<T_OPERATOR>(new Action<T_OPERATOR>(this.attach_T_OPERATOR), new Action<T_OPERATOR>(this.detach_T_OPERATOR));
			this._TJ_RIGHT_OPERATOR_TYPE = default(EntityRef<TJ_RIGHT_OPERATOR_TYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_OPERATOR_TYPE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_OPERATOR_TYPE
		{
			get
			{
				return this._ID_OPERATOR_TYPE;
			}
			set
			{
				if ((this._ID_OPERATOR_TYPE != value))
				{
					this.OnID_OPERATOR_TYPEChanging(value);
					this.SendPropertyChanging();
					this._ID_OPERATOR_TYPE = value;
					this.SendPropertyChanged("ID_OPERATOR_TYPE");
					this.OnID_OPERATOR_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_OPERATOR_TYPE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME_OPERATOR_TYPE
		{
			get
			{
				return this._NAME_OPERATOR_TYPE;
			}
			set
			{
				if ((this._NAME_OPERATOR_TYPE != value))
				{
					this.OnNAME_OPERATOR_TYPEChanging(value);
					this.SendPropertyChanging();
					this._NAME_OPERATOR_TYPE = value;
					this.SendPropertyChanged("NAME_OPERATOR_TYPE");
					this.OnNAME_OPERATOR_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_TYPE_T_OPERATOR", Storage="_T_OPERATOR", ThisKey="ID_OPERATOR_TYPE", OtherKey="ID_OPERATOR_TYPE")]
		public EntitySet<T_OPERATOR> T_OPERATOR
		{
			get
			{
				return this._T_OPERATOR;
			}
			set
			{
				this._T_OPERATOR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_TYPE_TJ_RIGHT_OPERATOR_TYPE", Storage="_TJ_RIGHT_OPERATOR_TYPE", ThisKey="ID_OPERATOR_TYPE", OtherKey="ID_RIGHT_OPERATOR_TYPE", IsUnique=true, IsForeignKey=false)]
		public TJ_RIGHT_OPERATOR_TYPE TJ_RIGHT_OPERATOR_TYPE
		{
			get
			{
				return this._TJ_RIGHT_OPERATOR_TYPE.Entity;
			}
			set
			{
				TJ_RIGHT_OPERATOR_TYPE previousValue = this._TJ_RIGHT_OPERATOR_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._TJ_RIGHT_OPERATOR_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TJ_RIGHT_OPERATOR_TYPE.Entity = null;
						previousValue.T_OPERATOR_TYPE = null;
					}
					this._TJ_RIGHT_OPERATOR_TYPE.Entity = value;
					if ((value != null))
					{
						value.T_OPERATOR_TYPE = this;
					}
					this.SendPropertyChanged("TJ_RIGHT_OPERATOR_TYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_OPERATOR(T_OPERATOR entity)
		{
			this.SendPropertyChanging();
			entity.T_OPERATOR_TYPE = this;
		}
		
		private void detach_T_OPERATOR(T_OPERATOR entity)
		{
			this.SendPropertyChanging();
			entity.T_OPERATOR_TYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_UPDATE_TICKET")]
	public partial class T_UPDATE_TICKET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_UPDATE_TICKET;
		
		private System.DateTime _DATE_UPDATE_TICKET;
		
		private string _DESCRIPTION_UPDATE_TICKET;
		
		private int _ID_MODIFIER_OPERATOR;
		
		private int _ID_DELEGATED_OPERATOR;
		
		private int _ID_TICKET;
		
		private int _ID_TICKET_STATE;
		
		private int _ID_LEVEL_TICKET;
		
		private EntityRef<T_OPERATOR> _T_OPERATOR;
		
		private EntityRef<T_OPERATOR> _T_OPERATOR1;
		
		private EntityRef<T_TICKET> _T_TICKET;
		
		private EntityRef<T_TICKET_STATE> _T_TICKET_STATE;
		
		private EntityRef<T_LEVEL_TICKET> _T_LEVEL_TICKET;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_UPDATE_TICKETChanging(int value);
    partial void OnID_UPDATE_TICKETChanged();
    partial void OnDATE_UPDATE_TICKETChanging(System.DateTime value);
    partial void OnDATE_UPDATE_TICKETChanged();
    partial void OnDESCRIPTION_UPDATE_TICKETChanging(string value);
    partial void OnDESCRIPTION_UPDATE_TICKETChanged();
    partial void OnID_MODIFIER_OPERATORChanging(int value);
    partial void OnID_MODIFIER_OPERATORChanged();
    partial void OnID_DELEGATED_OPERATORChanging(int value);
    partial void OnID_DELEGATED_OPERATORChanged();
    partial void OnID_TICKETChanging(int value);
    partial void OnID_TICKETChanged();
    partial void OnID_TICKET_STATEChanging(int value);
    partial void OnID_TICKET_STATEChanged();
    partial void OnID_LEVEL_TICKETChanging(int value);
    partial void OnID_LEVEL_TICKETChanged();
    #endregion
		
		public T_UPDATE_TICKET()
		{
			this._T_OPERATOR = default(EntityRef<T_OPERATOR>);
			this._T_OPERATOR1 = default(EntityRef<T_OPERATOR>);
			this._T_TICKET = default(EntityRef<T_TICKET>);
			this._T_TICKET_STATE = default(EntityRef<T_TICKET_STATE>);
			this._T_LEVEL_TICKET = default(EntityRef<T_LEVEL_TICKET>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_UPDATE_TICKET", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_UPDATE_TICKET
		{
			get
			{
				return this._ID_UPDATE_TICKET;
			}
			set
			{
				if ((this._ID_UPDATE_TICKET != value))
				{
					this.OnID_UPDATE_TICKETChanging(value);
					this.SendPropertyChanging();
					this._ID_UPDATE_TICKET = value;
					this.SendPropertyChanged("ID_UPDATE_TICKET");
					this.OnID_UPDATE_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_UPDATE_TICKET", DbType="DateTime NOT NULL")]
		public System.DateTime DATE_UPDATE_TICKET
		{
			get
			{
				return this._DATE_UPDATE_TICKET;
			}
			set
			{
				if ((this._DATE_UPDATE_TICKET != value))
				{
					this.OnDATE_UPDATE_TICKETChanging(value);
					this.SendPropertyChanging();
					this._DATE_UPDATE_TICKET = value;
					this.SendPropertyChanged("DATE_UPDATE_TICKET");
					this.OnDATE_UPDATE_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION_UPDATE_TICKET", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string DESCRIPTION_UPDATE_TICKET
		{
			get
			{
				return this._DESCRIPTION_UPDATE_TICKET;
			}
			set
			{
				if ((this._DESCRIPTION_UPDATE_TICKET != value))
				{
					this.OnDESCRIPTION_UPDATE_TICKETChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION_UPDATE_TICKET = value;
					this.SendPropertyChanged("DESCRIPTION_UPDATE_TICKET");
					this.OnDESCRIPTION_UPDATE_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MODIFIER_OPERATOR", DbType="Int NOT NULL")]
		public int ID_MODIFIER_OPERATOR
		{
			get
			{
				return this._ID_MODIFIER_OPERATOR;
			}
			set
			{
				if ((this._ID_MODIFIER_OPERATOR != value))
				{
					if (this._T_OPERATOR1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MODIFIER_OPERATORChanging(value);
					this.SendPropertyChanging();
					this._ID_MODIFIER_OPERATOR = value;
					this.SendPropertyChanged("ID_MODIFIER_OPERATOR");
					this.OnID_MODIFIER_OPERATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DELEGATED_OPERATOR", DbType="Int NOT NULL")]
		public int ID_DELEGATED_OPERATOR
		{
			get
			{
				return this._ID_DELEGATED_OPERATOR;
			}
			set
			{
				if ((this._ID_DELEGATED_OPERATOR != value))
				{
					if (this._T_OPERATOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DELEGATED_OPERATORChanging(value);
					this.SendPropertyChanging();
					this._ID_DELEGATED_OPERATOR = value;
					this.SendPropertyChanged("ID_DELEGATED_OPERATOR");
					this.OnID_DELEGATED_OPERATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TICKET", DbType="Int NOT NULL")]
		public int ID_TICKET
		{
			get
			{
				return this._ID_TICKET;
			}
			set
			{
				if ((this._ID_TICKET != value))
				{
					if (this._T_TICKET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TICKETChanging(value);
					this.SendPropertyChanging();
					this._ID_TICKET = value;
					this.SendPropertyChanged("ID_TICKET");
					this.OnID_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TICKET_STATE", DbType="Int NOT NULL")]
		public int ID_TICKET_STATE
		{
			get
			{
				return this._ID_TICKET_STATE;
			}
			set
			{
				if ((this._ID_TICKET_STATE != value))
				{
					if (this._T_TICKET_STATE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TICKET_STATEChanging(value);
					this.SendPropertyChanging();
					this._ID_TICKET_STATE = value;
					this.SendPropertyChanged("ID_TICKET_STATE");
					this.OnID_TICKET_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LEVEL_TICKET", DbType="Int NOT NULL")]
		public int ID_LEVEL_TICKET
		{
			get
			{
				return this._ID_LEVEL_TICKET;
			}
			set
			{
				if ((this._ID_LEVEL_TICKET != value))
				{
					if (this._T_LEVEL_TICKET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LEVEL_TICKETChanging(value);
					this.SendPropertyChanging();
					this._ID_LEVEL_TICKET = value;
					this.SendPropertyChanged("ID_LEVEL_TICKET");
					this.OnID_LEVEL_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_T_UPDATE_TICKET", Storage="_T_OPERATOR", ThisKey="ID_DELEGATED_OPERATOR", OtherKey="ID_OPERATOR", IsForeignKey=true)]
		public T_OPERATOR T_OPERATOR
		{
			get
			{
				return this._T_OPERATOR.Entity;
			}
			set
			{
				T_OPERATOR previousValue = this._T_OPERATOR.Entity;
				if (((previousValue != value) 
							|| (this._T_OPERATOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OPERATOR.Entity = null;
						previousValue.T_UPDATE_TICKET.Remove(this);
					}
					this._T_OPERATOR.Entity = value;
					if ((value != null))
					{
						value.T_UPDATE_TICKET.Add(this);
						this._ID_DELEGATED_OPERATOR = value.ID_OPERATOR;
					}
					else
					{
						this._ID_DELEGATED_OPERATOR = default(int);
					}
					this.SendPropertyChanged("T_OPERATOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OPERATOR_T_UPDATE_TICKET1", Storage="_T_OPERATOR1", ThisKey="ID_MODIFIER_OPERATOR", OtherKey="ID_OPERATOR", IsForeignKey=true)]
		public T_OPERATOR T_OPERATOR1
		{
			get
			{
				return this._T_OPERATOR1.Entity;
			}
			set
			{
				T_OPERATOR previousValue = this._T_OPERATOR1.Entity;
				if (((previousValue != value) 
							|| (this._T_OPERATOR1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OPERATOR1.Entity = null;
						previousValue.T_UPDATE_TICKET1.Remove(this);
					}
					this._T_OPERATOR1.Entity = value;
					if ((value != null))
					{
						value.T_UPDATE_TICKET1.Add(this);
						this._ID_MODIFIER_OPERATOR = value.ID_OPERATOR;
					}
					else
					{
						this._ID_MODIFIER_OPERATOR = default(int);
					}
					this.SendPropertyChanged("T_OPERATOR1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TICKET_T_UPDATE_TICKET", Storage="_T_TICKET", ThisKey="ID_TICKET", OtherKey="ID_TICKET", IsForeignKey=true)]
		public T_TICKET T_TICKET
		{
			get
			{
				return this._T_TICKET.Entity;
			}
			set
			{
				T_TICKET previousValue = this._T_TICKET.Entity;
				if (((previousValue != value) 
							|| (this._T_TICKET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_TICKET.Entity = null;
						previousValue.T_UPDATE_TICKET.Remove(this);
					}
					this._T_TICKET.Entity = value;
					if ((value != null))
					{
						value.T_UPDATE_TICKET.Add(this);
						this._ID_TICKET = value.ID_TICKET;
					}
					else
					{
						this._ID_TICKET = default(int);
					}
					this.SendPropertyChanged("T_TICKET");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TICKET_STATE_T_UPDATE_TICKET", Storage="_T_TICKET_STATE", ThisKey="ID_TICKET_STATE", OtherKey="ID_TICKET_STATE", IsForeignKey=true)]
		public T_TICKET_STATE T_TICKET_STATE
		{
			get
			{
				return this._T_TICKET_STATE.Entity;
			}
			set
			{
				T_TICKET_STATE previousValue = this._T_TICKET_STATE.Entity;
				if (((previousValue != value) 
							|| (this._T_TICKET_STATE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_TICKET_STATE.Entity = null;
						previousValue.T_UPDATE_TICKET.Remove(this);
					}
					this._T_TICKET_STATE.Entity = value;
					if ((value != null))
					{
						value.T_UPDATE_TICKET.Add(this);
						this._ID_TICKET_STATE = value.ID_TICKET_STATE;
					}
					else
					{
						this._ID_TICKET_STATE = default(int);
					}
					this.SendPropertyChanged("T_TICKET_STATE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_LEVEL_TICKET_T_UPDATE_TICKET", Storage="_T_LEVEL_TICKET", ThisKey="ID_LEVEL_TICKET", OtherKey="ID_LEVEL_TICKET", IsForeignKey=true)]
		public T_LEVEL_TICKET T_LEVEL_TICKET
		{
			get
			{
				return this._T_LEVEL_TICKET.Entity;
			}
			set
			{
				T_LEVEL_TICKET previousValue = this._T_LEVEL_TICKET.Entity;
				if (((previousValue != value) 
							|| (this._T_LEVEL_TICKET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_LEVEL_TICKET.Entity = null;
						previousValue.T_UPDATE_TICKET.Remove(this);
					}
					this._T_LEVEL_TICKET.Entity = value;
					if ((value != null))
					{
						value.T_UPDATE_TICKET.Add(this);
						this._ID_LEVEL_TICKET = value.ID_LEVEL_TICKET;
					}
					else
					{
						this._ID_LEVEL_TICKET = default(int);
					}
					this.SendPropertyChanged("T_LEVEL_TICKET");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_LEVEL_TICKET")]
	public partial class T_LEVEL_TICKET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_LEVEL_TICKET;
		
		private string _NAME_LEVEL_TICKET;
		
		private int _GRADE_LEVEL_TICKET;
		
		private EntitySet<T_UPDATE_TICKET> _T_UPDATE_TICKET;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LEVEL_TICKETChanging(int value);
    partial void OnID_LEVEL_TICKETChanged();
    partial void OnNAME_LEVEL_TICKETChanging(string value);
    partial void OnNAME_LEVEL_TICKETChanged();
    partial void OnGRADE_LEVEL_TICKETChanging(int value);
    partial void OnGRADE_LEVEL_TICKETChanged();
    #endregion
		
		public T_LEVEL_TICKET()
		{
			this._T_UPDATE_TICKET = new EntitySet<T_UPDATE_TICKET>(new Action<T_UPDATE_TICKET>(this.attach_T_UPDATE_TICKET), new Action<T_UPDATE_TICKET>(this.detach_T_UPDATE_TICKET));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LEVEL_TICKET", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_LEVEL_TICKET
		{
			get
			{
				return this._ID_LEVEL_TICKET;
			}
			set
			{
				if ((this._ID_LEVEL_TICKET != value))
				{
					this.OnID_LEVEL_TICKETChanging(value);
					this.SendPropertyChanging();
					this._ID_LEVEL_TICKET = value;
					this.SendPropertyChanged("ID_LEVEL_TICKET");
					this.OnID_LEVEL_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_LEVEL_TICKET", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string NAME_LEVEL_TICKET
		{
			get
			{
				return this._NAME_LEVEL_TICKET;
			}
			set
			{
				if ((this._NAME_LEVEL_TICKET != value))
				{
					this.OnNAME_LEVEL_TICKETChanging(value);
					this.SendPropertyChanging();
					this._NAME_LEVEL_TICKET = value;
					this.SendPropertyChanged("NAME_LEVEL_TICKET");
					this.OnNAME_LEVEL_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRADE_LEVEL_TICKET", DbType="Int NOT NULL")]
		public int GRADE_LEVEL_TICKET
		{
			get
			{
				return this._GRADE_LEVEL_TICKET;
			}
			set
			{
				if ((this._GRADE_LEVEL_TICKET != value))
				{
					this.OnGRADE_LEVEL_TICKETChanging(value);
					this.SendPropertyChanging();
					this._GRADE_LEVEL_TICKET = value;
					this.SendPropertyChanged("GRADE_LEVEL_TICKET");
					this.OnGRADE_LEVEL_TICKETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_LEVEL_TICKET_T_UPDATE_TICKET", Storage="_T_UPDATE_TICKET", ThisKey="ID_LEVEL_TICKET", OtherKey="ID_LEVEL_TICKET")]
		public EntitySet<T_UPDATE_TICKET> T_UPDATE_TICKET
		{
			get
			{
				return this._T_UPDATE_TICKET;
			}
			set
			{
				this._T_UPDATE_TICKET.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_UPDATE_TICKET(T_UPDATE_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_LEVEL_TICKET = this;
		}
		
		private void detach_T_UPDATE_TICKET(T_UPDATE_TICKET entity)
		{
			this.SendPropertyChanging();
			entity.T_LEVEL_TICKET = null;
		}
	}
}
#pragma warning restore 1591
